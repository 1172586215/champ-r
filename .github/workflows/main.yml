# This is a basic workflow to help you get started with Actions

name: build-win-installer

on:
  push:
    branches: [ release ]
    tags: 
    - 'v*'

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
      
    # Runs a single command using the runners shell
    - name: Install Dependencies
      run: yarn

    # Runs a set of commands using the runners shell
    - name: Start building
      run: yarn build 
    
    - name: Move artifacts
      run: |
        md -Name ./dist/artifacts -Force
        #7z a -ttar -mx=9 ./dist/artifacts/windows-unpacked.tar ./dist/win-unpacked
        Copy-Item ./dist/*.exe -Destination ./dist/artifacts
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true

    - name: Upload Release Assets
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./dist/artifacts/*.exe
        asset_name: champ-r-installer.exe
        asset_content_type: application/vnd.microsoft.portable-executable

    - name: Upload artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: champ-r-installer
        # Directory containing files to upload
        path: "./dist/artifacts"
