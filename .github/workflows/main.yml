# This is a basic workflow to help you get started with Actions

name: build-and-release

on:
  push:
    tags:
    - 'v*'

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Build
      run: |
        $sha = (git rev-parse --short HEAD)
        yarn --silent
        $env:SHORT_SHA=$sha; yarn build

    - name: Move artifacts
      id: vars
      shell: pwsh
      run: |
        $sha = (git rev-parse --short HEAD)
        md -Name ./dist/artifacts -Force
        #7z a -ttar -mx=9 ./dist/artifacts/windows-unpacked.tar ./dist/win-unpacked
        Copy-Item ./dist/*.exe -Destination ./dist/artifacts/
        $file = Get-ChildItem -Path ./dist/artifacts/ -Filter "*.exe" | select-object -first 1
        $newName = "$($file.BaseName).$($sha)$($file.Extension)"
        Rename-Item -Path $file.FullName -NewName $newName
        echo "::set-output name=fileName::$($newName)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      id: upload_release_assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/artifacts/${{ steps.vars.outputs.fileName }}
        asset_name: ${{ steps.vars.outputs.fileName }}
        asset_content_type: application/vnd.microsoft.portable-executable

    - name: Upload artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: champ-r-installer
        path: "./dist/artifacts"
